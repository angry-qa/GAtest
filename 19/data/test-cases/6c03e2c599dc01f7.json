{
  "uid" : "6c03e2c599dc01f7",
  "name" : "selenideSearchTest3()",
  "fullName" : "Tests.SearchTests.selenideSearchTest3",
  "historyId" : "a63acaa8a43b10331fd1ca84fe409260",
  "time" : {
    "start" : 1637507591513,
    "stop" : 1637507597569,
    "duration" : 6056
  },
  "description" : "",
  "status" : "failed",
  "statusMessage" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.",
  "statusTrace" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:133)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:85)\n\tat com.sun.proxy.$Proxy15.shouldHave(Unknown Source)\n\tat Tests.SearchTests.selenideSearchTest3(SearchTests.java:32)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "",
    "status" : "failed",
    "statusMessage" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.",
    "statusTrace" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:133)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:85)\n\tat com.sun.proxy.$Proxy15.shouldHave(Unknown Source)\n\tat Tests.SearchTests.selenideSearchTest3(SearchTests.java:32)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
    "steps" : [ {
      "name" : "$(\"open\") https://www.google.com/",
      "time" : {
        "start" : 1637507591513,
        "stop" : 1637507591802,
        "duration" : 289
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\"By.name: q\") set value(Selenide)",
      "time" : {
        "start" : 1637507591803,
        "stop" : 1637507592014,
        "duration" : 211
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\"By.name: q\") press enter()",
      "time" : {
        "start" : 1637507592014,
        "stop" : 1637507592694,
        "duration" : 680
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "$(\"#search\") should have(text 's2elenide1.org')",
      "time" : {
        "start" : 1637507592695,
        "stop" : 1637507597311,
        "duration" : 4616
      },
      "status" : "failed",
      "statusMessage" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.",
      "statusTrace" : "Element should have text 's2elenide1.org' {#search}\nElement: '<div id=\"search\">Search Results\nWeb Result with Site Links\n\nSelenide: concise UI tests in Java\nhttps://selenide.org\nSelenide is a framework for test automation powered by Selenium WebDriver that brings the following advantages: ... You don't need to think how to shutdown ...\nSelenide vs Selenium\nSelenide provides concise API for that makes your tests shorter ...\nDocumentation\nSelenide vs Selenium - Javadoc - Screenshots - FAQ - ...\nQuick Start\nJust add selenide.jar (and its dependencies) to your project ...\nReleased Selenide 5.25.0\nSupport for Selenium Webdriver 4.0.0 RC1. We released two ...\nMore results from selenide.org »\nPeople also ask\nWhat is Selenide formula?\n\nWhat is Selenide in testing?\n\nIs Selenium and Selenide the same thing?\n\nWhat is Selenide in automation?\n\nFeedback\nWeb results\n\nSelenide - Concise UI Tests with Java! - GitHub\nhttps://github.com › selenide › selenide\nSelenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...\n\nSelenide - Wikipedia\nhttps://en.wikipedia.org › wiki › Selenide\nA selenide is a chemical compound containing a selenium anion with oxidation number of −2 (Se2−), much as sulfur does in a sulfide.\n=Reactions · Metal selenide\n\nSelenide - Concise UI Tests in Java - Methods & Tools\nhttps://www.methodsandtools.com › tools › selenide\nSelenide is an open source software testing tool for writing concise, expressive and stable UI tests in Java. Selenide resolves all the typical problems ...\n\nSelenide - an overview | ScienceDirect Topics\nhttps://www.sciencedirect.com › topics › selenide\nSelenide, in turn, is the precursor of proteinogenic selenocysteine and selenophosphate, both of which are indispensable for selenoprotein synthesis.\n\ndefinition of selenide by The Free Dictionary\nhttps://www.thefreedictionary.com › selenide\n8 records — Also found in: Thesaurus, Medical, Encyclopedia, Wikipedia. selenide. (ˈsɛlɪˌnaɪd). n. (Chemistry) a chemical compound containing selenium. Collins ...\n\nSelenideElement · Selenide User Guide\nhttps://selenide.gitbooks.io › content › selenide-api › sel...\ncodeborne.selenide.SelenideElement [src]. The SelenideElement class is a wrapper over Selenium WebElement that adds some rather useful methods. The object ...\nVideos\nPREVIEW\n13:45\nWhy I switched to using Selenide for UI tests\nYouTube · Sebastian Daschner\nMay 23, 2021\nPREVIEW\n45:30\nSelenide: Concise UI Tests in Java\nYouTube · Selenium Conference\nSep 14, 2015\n10 key moments in this video\nPREVIEW\n1:57:44\n84. [pro:]TEST! LIVE! - Selenide: automate with pleasure! with ...\nYouTube · [pro:]TEST! Community\nApr 29, 2020\n10 key moments in this video\nFeedback\nView all</div>'\nScreenshot: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.png\nPage source: file:/home/runner/work/github-action-test/github-action-test/build/reports/tests/1637507596877.0.html\nTimeout: 4 s.\n\tat com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:121)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:30)\n\tat com.codeborne.selenide.commands.Should.execute(Should.java:14)\n\tat com.codeborne.selenide.commands.Commands.execute(Commands.java:155)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:133)\n\tat com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:85)\n\tat com.sun.proxy.$Proxy15.shouldHave(Unknown Source)\n\tat Tests.SearchTests.selenideSearchTest3(SearchTests.java:32)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1541)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9485e4c22a013e63",
        "name" : "Screenshot",
        "source" : "9485e4c22a013e63.png",
        "type" : "image/png",
        "size" : 104759
      }, {
        "uid" : "b41a3dbe133f81cc",
        "name" : "Page source",
        "source" : "b41a3dbe133f81cc.html",
        "type" : "text/html",
        "size" : 646752
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "381580bf9f61b1cd",
      "name" : "Last screenshot",
      "source" : "381580bf9f61b1cd.png",
      "type" : "image/png",
      "size" : 104759
    }, {
      "uid" : "4a882918f0de5635",
      "name" : "Page source",
      "source" : "4a882918f0de5635.html",
      "type" : "text/plain",
      "size" : 646752
    }, {
      "uid" : "dc155c156db51762",
      "name" : "Browser console logs",
      "source" : "dc155c156db51762.bin",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "fv-az36-755"
  }, {
    "name" : "thread",
    "value" : "3200@fv-az36-755.Test worker(11)"
  }, {
    "name" : "framework",
    "value" : "junit-platform"
  }, {
    "name" : "language",
    "value" : "java"
  }, {
    "name" : "package",
    "value" : "Tests.SearchTests"
  }, {
    "name" : "testClass",
    "value" : "Tests.SearchTests"
  }, {
    "name" : "testMethod",
    "value" : "selenideSearchTest3"
  }, {
    "name" : "suite",
    "value" : "Tests.SearchTests"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6c03e2c599dc01f7.json",
  "parameterValues" : [ ]
}